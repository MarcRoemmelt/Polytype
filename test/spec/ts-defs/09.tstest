/*!TESTDATA
{
    title: 'Assignability of constructors and prototypes',
}
*/

class T1            { m1 = 1 as const; }
abstract class T2   { m2 = 2 as const; }
class T3            { m3 = 3 as const; }
class T4            { m4 = 4 as const; }
class T5            { m5 = 5 as const; }
class T6            { m6 = 6 as const; }
class T7            { m7 = 7 as const; }
class T8            { m8 = 8 as const; }
class T9            { m9 = 9 as const; }
class T10           { m10 = 10 as const; }
class T11           { m11 = 11 as const; }
class U extends classes(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) { }

void (U.prototype as T1);
void (U.prototype as T2);
void (U.prototype as T3);
void (U.prototype as T4);
void (U.prototype as T5);
void (U.prototype as T6);
void (U.prototype as T7);
void (U.prototype as T8);
void (U.prototype as T9);
void (U.prototype as T10);
void (U.prototype as T11);
void (U as typeof T1);
void (U as typeof T2);
void (U as typeof T3);
void (U as typeof T4);
void (U as typeof T5);
void (U as typeof T6);
void (U as typeof T7);
void (U as typeof T8);
void (U as typeof T9);
void (U as typeof T10);
void (U as typeof T11);
