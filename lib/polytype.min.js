// Polytype 0.5.0 â€“ https://github.com/fasttime/Polytype
!function(){"use strict";function t(n,e){if(B(n))return!1;if(e.has(n))return!0;e.add(n);const o=z(n);let r=!1;for(const n of o)Y(n)&&t(n,e)&&(r=!0);return r||R(n),!0}function n(n,e){for(const o of n){const n=o.constructor;Q(n)&&t(n,e)}}function e(t,n){const o=z(n);for(const n of o)if(n===t||e(t,n))return!0;return!1}const o=[],r=Function.prototype,s=Map,c=Object,{create:i,defineProperties:u,defineProperty:a,getOwnPropertyDescriptors:f,getPrototypeOf:l,prototype:p,setPrototypeOf:y}=c,d=Proxy,h=Reflect,{construct:w,get:g,ownKeys:m,set:P}=h,b=Set,O=String,v=Symbol.hasInstance,_=TypeError,$=t=>r.call.bind(t),j=$(r.bind),x=$(r[v]),I=$(p.hasOwnProperty),L=$(p.valueOf),M=(t,n)=>{if(t.has(n)){const t=`Duplicate superclass ${tt(n)}`;throw _(t)}},S=t=>{if(!J(t))throw _("Argument is not a function")},k=(...t)=>{if(!t.length)throw _("No superclasses specified");const e=new b,o=new b;for(const n of t){if(M(e,n),!Q(n)){const t=`${tt(n)} is not a constructor`;throw _(t)}const{prototype:t}=n;if(V(t)){const t=`Property 'prototype' of ${tt(n)} is not an object or null`;throw _(t)}e.add(n),null!==t&&o.add(t)}const r=function(t,n){const e=function(t){return N(class{static _(n){if(!t.has(n))throw S(n),_("Argument is not a direct superclass");return K(n,this)}}._,"name","class",!1)}(t),o=C(t),r=function(t){return N(class{static _(n){S(n);const{prototype:e}=n;if(!t.has(e)){const t=Y(e)?"Property 'prototype' of argument does not match any direct superclass":"Property 'prototype' of argument is not an object";throw _(t)}return K(e,this)}}._,"name","class",!1)}(n),c=function(t){const n=function(...n){const e=function(t,n){const e=new s;let o,r;const c=t=>{if(o===!t)throw _("Mixed argument styles");o=t};for(const o of n){if(X(o))throw _("Invalid arguments");let n,s;if(void 0!==o&&Y(n=o.super)){if(c(!0),M(e,n),!t.has(n)){const t=`${tt(n)} is not a direct superclass`;throw _(t)}if(s=o.arguments,X(s)){const t=`Invalid arguments for superclass ${tt(n)}`;throw _(t)}}else c(!1),r||(r=t.values()),n=r.next().value,s=o;const i=void 0!==s?E(s):void 0;e.set(n,i)}return e}(t,n),o=new.target;for(const n of t){const t=e.get(n),r=W(n,t,o),s=m(r);for(const t of s)I(this,t)&&delete r[t];u(this,r)}};return y(n,null),n}(t),a=F(c,t,D),f=i(null,{constructor:T(a,!0,!1,!0),class:T(r)}),l=F(f,n,A),p={class:T(e),name:{get:o},prototype:T(l)};return u(c,p),a}(e,o);{const t=new b;n(e,t),n(o,t)}return r},A={setPrototypeOf:()=>!1},D={__proto__:A,apply:()=>{throw _("Constructor cannot be invoked without 'new'")}},C=t=>()=>`(${[...t].map(({name:t})=>O(t))})`,E=r.apply.bind((...t)=>t,null),F=(t,n,e)=>{const o=((t,n)=>({__proto__:n,get(n,e,o){const r=t.find(et(e));if(void 0!==r)return g(r,e,o)},has:(n,e)=>t.some(et(e)),set(n,e,o,r){const s=t.find(et(e));return void 0!==s?P(s,e,o,r):(N(r,e,o,!0,!0),!0)}}))([t,...n],e),r=new d(t,o);return ot.set(r,n),r},K=(t,n)=>{const e=t=>{const e=t();return y(r,n),e},o=new d(n,{get:(o,r)=>e(()=>g(t,r,n)),set:(o,r,s)=>e(()=>P(t,r,s,n))}),r=i(o);return r},N=(t,n,e,o=!0,r=!1)=>a(t,n,T(e,o,r,!0)),R=t=>N(t,v,G),T=(t,n,e,o)=>({value:t,writable:n,enumerable:e,configurable:o}),W=(t,n=o,e)=>f(w(t,n,e)),{getPrototypeListOf:q}={getPrototypeListOf:t=>{let n;{const e=l(t);if(null!==e){const t=ot.get(e);n=t?[...t]:[e]}else n=[]}return n}},z=t=>{let n=ot.get(t);if(!n){const e=l(t);n=null!==e?[e]:o}return n},B=t=>J(t)&&I(t,"apply")&&I(t,"bind")&&I(t,"call")&&!I(t,"prototype")&&I(t,v),{[v]:G}=class{static[v](t){H=!0;try{if(J(this)){const n=x(this,t);if(!H)return n;if(n||Y(t)&&e(this.prototype,t))return!0}return!1}finally{H=!1}}};let H=!1;const J=t=>"function"==typeof t,Q=t=>{if(J(t)){const n=j(t);N(n,"prototype",null);const e=new d(n,{construct(){return this}});try{return new class extends e{},!0}catch(t){}}return!1},U=t=>!nt.includes(typeof t),V=t=>void 0===t||U(t),X=t=>null===t||U(t),Y=t=>null!==t&&!V(t),{isPrototypeOf:Z}=class{static isPrototypeOf(t){return!(!Y(t)||!e(L(this),t))}},tt=t=>{let n;return J(t)&&(({name:n}=t),null!=n&&(n=O(n)))?n:n=O(t)},nt=["function","object","undefined"],et=t=>n=>t in n,ot=new WeakMap;N(k,"name","classes",!1),N(p,"isPrototypeOf",Z),(()=>{const t="undefined"==typeof self?global:self;!t.hasOwnProperty("classes")&&(N(t,"classes",k),N(c,"getPrototypeListOf",q))})()}();