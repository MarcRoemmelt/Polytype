// Polytype 0.6.0 â€“ https://github.com/fasttime/Polytype
!function(){"use strict";function t(e,n){const o=G(n);for(const n of o)if(n===e||t(e,n))return!0;return!1}const e=[],n=Function.prototype,o=Map,r=Object,{create:s,defineProperties:c,defineProperty:i,getOwnPropertyDescriptor:a,getOwnPropertyDescriptors:u,getPrototypeOf:f,prototype:l,setPrototypeOf:p}=r,y=Proxy,d=Reflect,{construct:h,get:w,ownKeys:g,set:m}=d,P=Set,b=String,v=Symbol.hasInstance,O=TypeError,_=t=>n.call.bind(t),$=_(n.bind),x=_(n[v]),S=_(n.toString),j=_(l.hasOwnProperty),I=_(l.valueOf),k=(t,e)=>{if(t.has(e)){const t=`Duplicate superclass ${rt(e)}`;throw O(t)}},D=t=>{if(!U(t))throw O("Argument is not a function")},L=(...t)=>{if(!t.length)throw O("No superclasses specified");const e=new P,n=new P;for(const o of t){if(k(e,o),!V(o)){const t=`${rt(o)} is not a constructor`;throw O(t)}const{prototype:t}=o;if(tt(t)){const t=`Property 'prototype' of ${rt(o)} is not an object or null`;throw O(t)}e.add(o),null!==t&&n.add(t)}const o=function(t,e){const n=T(t),o=E(t),r=R(e),i=C(t),a=K(i,t,A),u=s(null,{constructor:q(a,!0,!1,!0),class:q(r)}),f=K(u,e,M),l={class:q(n),name:{get:o},prototype:q(f)};return c(i,l),a}(e,n);return function(...t){const e=new P,n=new P;for(const o of t)for(let t of o)for(;!e.has(t);){e.add(t);const o=t.constructor;if(V(o)&&Q(o,n),t=f(t),!nt(t))break}}(e,n),o},M={setPrototypeOf:()=>!1},A={__proto__:M,apply:()=>{throw O("Constructor cannot be invoked without 'new'")}},C=t=>{const e=function(...e){const n=function(t,e){const n=new o;let r,s;const c=t=>{if(r===!t)throw O("Mixed argument styles");r=t};for(const o of e){if(et(o))throw O("Invalid arguments");let e,r;if(void 0!==o&&nt(e=o.super)){if(c(!0),k(n,e),!t.has(e)){const t=`${rt(e)} is not a direct superclass`;throw O(t)}if(r=o.arguments,et(r)){const t=`Invalid arguments for superclass ${rt(e)}`;throw O(t)}}else c(!1),s||(s=t.values()),e=s.next().value,r=o;const i=void 0!==r?F(r):void 0;n.set(e,i)}return n}(t,e),r=new.target;for(const e of t){const t=n.get(e),o=z(e,t,r),s=g(o);for(const t of s)j(this,t)&&delete o[t];c(this,o)}};return p(e,null),e},E=t=>()=>`(${[...t].map(({name:t})=>b(t))})`,F=n.apply.bind((...t)=>t,null),K=(t,e,n)=>{const o=((t,e)=>({__proto__:e,get(e,n,o){const r=t.find(ct(n));if(void 0!==r)return w(r,n,o)},has:(e,n)=>t.some(ct(n)),set(e,n,o,r){const s=t.find(ct(n));return void 0!==s?m(s,n,o,r):(W(r,n,o,!0,!0),!0)}}))([t,...e],n),r=new y(t,o);return it.set(r,e),r},N=(t,e)=>{const n=t=>{const n=t();return p(r,e),n},o=new y(e,{get:(o,r)=>n(()=>w(t,r,e)),set:(o,r,s)=>n(()=>m(t,r,s,e))}),r=s(o);return r},R=t=>W(class{static _(e){D(e);const{prototype:n}=e;if(!t.has(n)){const t=nt(n)?"Property 'prototype' of argument does not match any direct superclass":"Property 'prototype' of argument is not an object";throw O(t)}return N(n,this)}}._,"name","class",!1),T=t=>W(class{static _(e){if(!t.has(e))throw D(e),O("Argument is not a direct superclass");return N(e,this)}}._,"name","class",!1),W=(t,e,n,o=!0,r=!1)=>i(t,e,q(n,o,r,!0)),q=(t,e,n,o)=>({value:t,writable:e,enumerable:n,configurable:o}),z=(t,n=e,o)=>u(h(t,n,o)),{getPrototypeListOf:B}={getPrototypeListOf:t=>{let e;{const n=f(t);if(null!==n){const t=it.get(n);e=t?[...t]:[n]}else e=[]}return e}},G=t=>{let n=it.get(t);if(!n){const o=f(t);n=null!==o?[o]:e}return n},{[v]:H}=class{static[v](e){J=!0;try{if(U(this)){const n=x(this,e);if(!J)return n;if(n||nt(e)&&t(this.prototype,e))return!0}return!1}finally{J=!1}}};let J=!1;const Q=(t,e)=>{if(X(t))return!1;if(e.has(t))return!0;e.add(t);const n=G(t);let o=!1;for(const t of n)nt(t)&&Q(t,e)&&(o=!0);return o||(t=>W(t,v,H))(t),!0},U=t=>"function"==typeof t,V=t=>{if(U(t)){const e=$(t);W(e,"prototype",null);const n=new y(e,{construct(){return this}});try{return new class extends n{},!0}catch(t){}}return!1},X=t=>{if(Y(t,"")){const e=a(t,v);if(e&&!e.writable&&!e.enumerable&&!e.configurable){const{value:t}=e;if(Y(t,"[Symbol.hasInstance]"))return!0}}return!1},Y=(t,e)=>{let n;try{n=S(t)}catch(t){return!1}const o=/^function ?(.*)\(\) {\s+\[native code]\s+}/.exec(n);return o&&o[1]===e&&!V(t)},Z=t=>!st.includes(typeof t),tt=t=>void 0===t||Z(t),et=t=>null===t||Z(t),nt=t=>null!==t&&!tt(t),{isPrototypeOf:ot}=class{static isPrototypeOf(e){return!(!nt(e)||!t(I(this),e))}},rt=t=>{let e;return U(t)&&(({name:e}=t),null!=e&&(e=b(e)))?e:e=b(t)},st=["function","object","undefined"],ct=t=>e=>t in e,it=new WeakMap;W(L,"name","classes",!1),W(l,"isPrototypeOf",ot),(()=>{const t="undefined"==typeof self?global:self;!t.hasOwnProperty("classes")&&(W(t,"classes",L),W(r,"getPrototypeListOf",B))})()}();