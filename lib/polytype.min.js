// Polytype 0.4.0 â€“ https://github.com/fasttime/Polytype
!function(){"use strict";function t(e,n){const o=W(n);for(const n of o)if(n===e||t(e,n))return!0;return!1}const e=[],n=Function.prototype,o=Map,s=Object,{create:r,defineProperties:c,defineProperty:i,getOwnPropertyDescriptors:u,getPrototypeOf:a,prototype:l,setPrototypeOf:f}=s,p=Proxy,y=Reflect,{construct:d,get:h,ownKeys:w,set:g}=y,m=Set,P=String,O=Symbol.hasInstance,b=TypeError,v=t=>n.call.bind(t),_=v(n.bind),$=v(n[O]),j=v(l.hasOwnProperty),x=v(l.valueOf),I=(t,e)=>{if(t.has(e)){const t=`Duplicate superclass ${X(e)}`;throw b(t)}},L=t=>{if(!B(t))throw b("Argument is not a function")},M=(...t)=>{if(!t.length)throw b("No superclasses specified");const e=new m,s=new m;for(const n of t){if(I(e,n),!G(n)){const t=`${X(n)} is not a constructor`;throw b(t)}const{prototype:t}=n;if(J(t)){const t=`Property 'prototype' of ${X(n)} is not an object or null`;throw b(t)}e.add(n),null!==t&&s.add(t)}const i=function(t,e){const n=function(t){return F(class{static _(e){if(!t.has(e))throw L(e),b("Argument is not a direct superclass");return E(e,this)}}._,"name","class",!1)}(t),s=A(t),i=function(t){return F(class{static _(e){L(e);const{prototype:n}=e;if(!t.has(n)){const t=U(n)?"Property 'prototype' of argument does not match any direct superclass":"Property 'prototype' of argument is not an object";throw b(t)}return E(n,this)}}._,"name","class",!1)}(e),u=function(t){const e=function(...e){const n=function(t,e){const n=new o;let s,r;const c=t=>{if(s===!t)throw b("Mixed argument styles");s=t};for(const o of e){if(Q(o))throw b("Invalid arguments");let e,s;if(void 0!==o&&U(e=o.super)){if(c(!0),I(n,e),!t.has(e)){const t=`${X(e)} is not a direct superclass`;throw b(t)}if(s=o.arguments,Q(s)){const t=`Invalid arguments for superclass ${X(e)}`;throw b(t)}}else c(!1),r||(r=t.values()),e=r.next().value,s=o;const i=void 0!==s?D(s):void 0;n.set(e,i)}return n}(t,e),s=new.target;for(const e of t){const t=n.get(e),o=R(e,t,s),r=w(o);for(const t of r)j(this,t)&&delete o[t];c(this,o)}};return f(e,null),e}(t),a=C(u,t,k),l=r(null,{constructor:N(a,!0,!1,!0),class:N(i)}),p=C(l,e,S),y={class:N(n),name:{get:s},prototype:N(p)};return c(u,y),a}(e,s);return function t(e){let o=!1;for(const s of e)s!==n&&U(s)&&(o=!0,t(W(s))||K(s));return o}(t),i},S={setPrototypeOf:()=>!1},k={__proto__:S,apply:()=>{throw b("Constructor cannot be invoked without 'new'")}},A=t=>()=>`(${[...t].map(({name:t})=>P(t))})`,D=n.apply.bind((...t)=>t,null),C=(t,e,n)=>{const o=((t,e)=>({__proto__:e,get(e,n,o){const s=t.find(Z(n));if(void 0!==s)return h(s,n,o)},has:(e,n)=>t.some(Z(n)),set(e,n,o,s){const r=t.find(Z(n));return void 0!==r?g(r,n,o,s):(F(s,n,o,!0,!0),!0)}}))([t,...e],n),s=new p(t,o);return tt.set(s,e),s},E=(t,e)=>{const n=t=>{const n=t();return f(s,e),n},o=new p(e,{get:(o,s)=>n(()=>h(t,s,e)),set:(o,s,r)=>n(()=>g(t,s,r,e))}),s=r(o);return s},F=(t,e,n,o=!0,s=!1)=>i(t,e,N(n,o,s,!0)),K=t=>F(t,O,q),N=(t,e,n,o)=>({value:t,writable:e,enumerable:n,configurable:o}),R=(t,n=e,o)=>u(d(t,n,o)),{getPrototypeListOf:T}={getPrototypeListOf:t=>{let e;{const n=a(t);if(null!==n){const t=tt.get(n);e=t?[...t]:[n]}else e=[]}return e}},W=t=>{let n=tt.get(t);if(!n){const o=a(t);n=null!==o?[o]:e}return n},{[O]:q}=class{static[O](e){z=!0;try{if(B(this)){const n=$(this,e);if(!z)return n;if(n||U(e)&&t(this.prototype,e))return!0}return!1}finally{z=!1}}};let z=!1;const B=t=>"function"==typeof t,G=t=>{if(B(t)){const e=_(t);F(e,"prototype",null);const n=new p(e,{construct(){return this}});try{return new class extends n{},!0}catch(t){}}return!1},H=t=>!Y.includes(typeof t),J=t=>void 0===t||H(t),Q=t=>null===t||H(t),U=t=>null!==t&&!J(t),{isPrototypeOf:V}=class{static isPrototypeOf(e){return!(!U(e)||!t(x(this),e))}},X=t=>{let e;return B(t)&&(({name:e}=t),null!=e&&(e=P(e)))?e:e=P(t)},Y=["function","object","undefined"],Z=t=>e=>t in e,tt=new WeakMap;F(M,"name","classes",!1),K(s),F(l,"isPrototypeOf",V),(()=>{const t="undefined"==typeof self?global:self;!t.hasOwnProperty("classes")&&(F(t,"classes",M),F(s,"getPrototypeListOf",T))})()}();