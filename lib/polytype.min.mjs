// Polytype 0.3.0 â€“ https://github.com/fasttime/Polytype
function t(e,o){const n=q(o);for(const o of n)if(o===e||t(e,o))return!0;return!1}const e=[],o=Function.prototype,n=Map,r=Object,{create:s,defineProperties:c,defineProperty:i,getOwnPropertyDescriptors:u,getPrototypeOf:a,prototype:l,setPrototypeOf:f}=r,p=Proxy,y=Reflect,{construct:d,get:h,ownKeys:w,set:g}=y,m=Set,P=String,O=Symbol.hasInstance,b=TypeError,v=t=>o.call.bind(t),_=v(o.bind),$=v(o[O]),x=v(l.hasOwnProperty),j=v(l.valueOf),I=(t,e)=>{if(t.has(e)){const t=`Duplicate superclass ${Y(e)}`;throw b(t)}},L=t=>{if(!G(t))throw b("Argument is not a function")},M=(...t)=>{if(!t.length)throw b("No superclasses specified");const e=new m,r=new m;for(const o of t){if(I(e,o),!H(o)){const t=`${Y(o)} is not a constructor`;throw b(t)}const{prototype:t}=o;if(Q(t)){const t=`Property 'prototype' of ${Y(o)} is not an object or null`;throw b(t)}e.add(o),null!==t&&r.add(t)}const i=function(t,e){const o=function(t){return F(class{static _(e){if(!t.has(e))throw L(e),b("Argument is not a direct superclass");return E(e,this)}}._,"name","class",!1)}(t),r=A(t),i=function(t){return F(class{static _(e){L(e);const{prototype:o}=e;if(!t.has(o)){const t=V(o)?"Property 'prototype' of argument does not match any direct superclass":"Property 'prototype' of argument is not an object";throw b(t)}return E(o,this)}}._,"name","class",!1)}(e),u=function(t){const e=function(...e){const o=function(t,e){const o=new n;let r,s;const c=t=>{if(r===!t)throw b("Mixed argument styles");r=t};for(const n of e){if(U(n))throw b("Invalid arguments");let e,r;if(void 0!==n&&V(e=n.super)){if(c(!0),I(o,e),!t.has(e)){const t=`${Y(e)} is not a direct superclass`;throw b(t)}if(r=n.arguments,U(r)){const t=`Invalid arguments for superclass ${Y(e)}`;throw b(t)}}else c(!1),s||(s=t.values()),e=s.next().value,r=n;const i=void 0!==r?D(r):void 0;o.set(e,i)}return o}(t,e),r=new.target;for(const e of t){const t=o.get(e),n=T(e,t,r),s=w(n);for(const t of s)x(this,t)&&delete n[t];c(this,n)}};return f(e,null),e}(t),a=C(u,t,k),l=s(null,{constructor:R(a,!0,!1,!0),class:R(i)}),p=C(l,e,S),y={class:R(o),name:{get:r},prototype:R(p)};return c(u,y),a}(e,r);return function t(e){let n=!1;for(const r of e)r!==o&&V(r)&&(n=!0,t(q(r))||N(r));return n}(t),i},S={setPrototypeOf:()=>!1},k={__proto__:S,apply:()=>{throw b("Constructor cannot be invoked without 'new'")}},A=t=>()=>`(${[...t].map(({name:t})=>P(t))})`,D=o.apply.bind((...t)=>t,null),C=(t,e,o)=>{const n=((t,e)=>({__proto__:e,get(e,o,n){const r=t.find(tt(o));if(void 0!==r)return h(r,o,n)},has:(e,o)=>t.some(tt(o)),set(e,o,n,r){const s=t.find(tt(o));return void 0!==s?g(s,o,n,r):(F(r,o,n,!0,!0),!0)}}))([t,...e],o),r=new p(t,n);return et.set(r,e),r},E=(t,e)=>{const o=t=>{const o=t();return f(r,e),o},n=new p(e,{get:(n,r)=>o(()=>h(t,r,e)),set:(n,r,s)=>o(()=>g(t,r,s,e))}),r=s(n);return r},F=(t,e,o,n=!0,r=!1)=>i(t,e,R(o,n,r,!0)),K=()=>{const t="undefined"==typeof self?global:self;return!t.hasOwnProperty("classes")&&(F(t,"classes",M),F(r,"getPrototypeListOf",W),!0)},N=t=>F(t,O,z),R=(t,e,o,n)=>({value:t,writable:e,enumerable:o,configurable:n}),T=(t,o=e,n)=>u(d(t,o,n)),{getPrototypeListOf:W}={getPrototypeListOf:t=>{let e;{const o=a(t);if(null!==o){const t=et.get(o);e=t?[...t]:[o]}else e=[]}return e}},q=t=>{let o=et.get(t);if(!o){const n=a(t);o=null!==n?[n]:e}return o},{[O]:z}=class{static[O](e){B=!0;try{if(G(this)){const o=$(this,e);if(!B)return o;if(o||V(e)&&t(this.prototype,e))return!0}return!1}finally{B=!1}}};let B=!1;const G=t=>"function"==typeof t,H=t=>{if(G(t)){const e=_(t);F(e,"prototype",null);try{return!!class extends e{}}catch(t){}}return!1},J=t=>!Z.includes(typeof t),Q=t=>void 0===t||J(t),U=t=>null===t||J(t),V=t=>null!==t&&!Q(t),{isPrototypeOf:X}=class{static isPrototypeOf(e){return!(!V(e)||!t(j(this),e))}},Y=t=>{let e;return G(t)&&(({name:e}=t),null!=e&&(e=P(e)))?e:e=P(t)},Z=["function","object","undefined"],tt=t=>e=>t in e,et=new WeakMap;F(M,"name","classes",!1),N(r),F(l,"isPrototypeOf",X);export{M as classes,K as defineGlobally,W as getPrototypeListOf};