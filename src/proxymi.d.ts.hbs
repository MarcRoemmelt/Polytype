declare namespace Proxymi
{
    type Enrich<T, U> = T & Pick<U, Exclude<keyof U, keyof T>>;

    type ProtoType<T> = T extends { prototype: infer U } ? U : never;

    type ReadonlyConstructorParameters<T extends new (...args: any) => any> =
    Readonly<ConstructorParameters<T>>;

    type SuperConstructor =
    {
        new (...args: any): any;
        prototype: object | null;
    };

    type ClusteredConstructor<T extends SuperConstructor> =
    {
        /**
         * Allows accessing a property or calling a method in a specified base class, eliminating
         * ambiguity when multiple base classes share a property with the same key.
         *
         * @param type
         * The referenced base class.
         */
        class<U extends T>(type: U): U;
    };

    type ClusteredPrototype<T extends SuperConstructor> =
    {
        /**
         * Allows accessing a property or calling a method in a specified base class, eliminating
         * ambiguity when multiple base classes share a property with the same key.
         *
         * @param type
         * The referenced base class.
         */
        class<U extends T>(type: U): InstanceType<U>;
    };

    type SuperConstructorInvokeInfo<T extends SuperConstructor> =
    {
        super: T;
        arguments?: ReadonlyConstructorParameters<T>;
    };
}

interface ObjectConstructor
{
    /**
     * Returns the list of prototypes of an object.
     *
     * @param o
     * The object that references the prototypes.
     */
    getPrototypeListOf(o: any): any[];
}
{{#each indexesList}}

/**
 * Allows defining a derived class that inherits from multiple base classes.
 */
declare function classes
<
{{#each this}}
    T{{this}} extends Proxymi.SuperConstructor,
{{/each}}
>
(
{{#each this}}
    type{{this}}: T{{this}},
{{/each}}
):
{
    new
    (
{{#each this}}
        args{{this}}?: Proxymi.ReadonlyConstructorParameters<T{{this}}>,
{{/each}}
    ):
{{#each this}}
    & InstanceType<T{{this}}>
{{/each}}
    & Proxymi.ClusteredPrototype<{{joinTs this ' | '}}>;

    new
    (
        ...args:
        (
{{#each this}}
            | Proxymi.SuperConstructorInvokeInfo<T{{this}}>
{{/each}}
        )[]
    ):
{{#each this}}
    & InstanceType<T{{this}}>
{{/each}}
    & Proxymi.ClusteredPrototype<{{joinTs this ' | '}}>;

    readonly prototype: Proxymi.ProtoType<{{joinTs this ' & '}}>;
}
&
{{#each this}}
Proxymi.Enrich<
{{/each}}
Proxymi.ClusteredConstructor<{{joinTs this ' | '}}>,
{{joinTs this '>, '}}>;
{{/each}}
